



#include <iostream>
#include <vector>

using namespace std;

void zeroMatrix(vector<vector<int>>& matrix) {
    int m = matrix.size();
    if (m == 0) return;
    int n = matrix[0].size();

    vector<bool> zeroRows(m, false);
    vector<bool> zeroCols(n, false);

    // Find the zero elements and mark their rows and columns
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            if (matrix[i][j] == 0) {
                zeroRows[i] = true;
                zeroCols[j] = true;
            }
        }
    }

    // Set the elements to zero based on the marked rows and columns
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            if (zeroRows[i] || zeroCols[j]) {
                matrix[i][j] = 0;
            }
        }
    }
}

int main() {
    int m, n;
    
    cout << "Enter the number of rows: ";
    cin >> m;
    cout << "Enter the number of columns: ";
    cin >> n;

    vector<vector<int>> matrix(m, vector<int>(n));

    cout << "Enter the elements of the matrix:" << endl;
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            cin >> matrix[i][j];
        }
    }

    cout << "Original Matrix:" << endl;
    for (const vector<int>& row : matrix) {
        for (int val : row) {
            cout << val << " ";
        }
        cout << endl;
    }

    zeroMatrix(matrix);

    cout << "Matrix with Zeroed Rows and Columns:" << endl;
    for (const vector<int>& row : matrix) {
        for (int val : row) {
            cout << val << " ";
        }
        cout << endl;
    }

    return 0;
}
